@model TimesheetApp.Models.CreateProjectViewModel

@{
    ViewData["Title"] = "All Projects";
}
<h1>Create a Project</h1>

<div class="row">
    <div class="col-md-10">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="project.ProjectTitle" class="control-label" id="ProjectTitleLabel"></label>
                <input asp-for="project.ProjectTitle" class="form-control" placeholder="Enter a Project Name" id="ProjectTitleLabel"/>
                <br />
                <label asp-for="project.ProjectId" class="control-label" id="ProjectIdLabel"></label>
                <input asp-for="project.ProjectId" class="form-control" type="number" value="" placeholder="Enter a Project Id" id="ProjectIdInput"/>
                <br />
                <span asp-validation-for="project.ProjectTitle" class="text-danger"></span>
            </div>
            <div class="form-group">
                @*
                <select asp-for="project.ProjectManagerId" class="form-control" asp-items="ViewBag.UserId"></select> *@
                <label asp-for="project.ProjectManagerId" class="control-label"></label>
                <input asp-for="project.ProjectManagerId" type="hidden" id="projectManagerIdInput" />
                <input type="text" class="dropdown-toggle form-control w-100" data-bs-toggle="dropdown"
                    aria-expanded="false" onkeyup="filterDropdown(event)" id="employeeSearchBox" autocomplete="off"
                    placeholder="Search Employee..." />
                <ul class="dropdown-menu" aria-labelledby="employeeDropdown" id="employeeMenu">
                    @foreach (ApplicationUser obj
                    in (ViewData["users"] as List<ApplicationUser>) ?? new List<ApplicationUser>())
                    {
                        <li class="dropdown-item" id='@(obj.FirstName + " " + obj.LastName)' value="@obj.Id" onclick="document.querySelector('#employeeSearchBox').value = '@obj.FirstName @obj.LastName';
            document.querySelector('#projectManagerIdInput').value = '@obj.Id'">
                            @obj.FirstName @obj.LastName
                        </li>
                    }
                </ul>
                <span asp-validation-for="project.ProjectManagerId" class="text-danger"></span>


            </div>
            <br />
            <h1>Project Budget</h1>
            @for (int i = 0; i < Model.budgets!.Count; i++)
            {
                <div class="form-group ">
                    <input type="hidden" asp-for="budgets![i].LabourCode" value="@Model.budgets![i].LabourCode" />
                    <span>@Model.budgets![i].LabourCode</span>
                    <div class="d-flex align-items-center"
                        style="display:flex; flex-direction: row; overflow: hidden; white-space: nowrap;">
                        <input asp-for="budgets![i].People!" style="width: 15%;" class="form-control people"
                            onchange="setTotal('@Model.budgets![i].LabourCode', @Model.budgets![i].Rate, this.value, this.parentNode.querySelector('.days').value, @Model.budgets![i].UnallocatedDays, @Model.budgets![i].UnallocatedPeople)" />
                        <span asp-validation-for="budgets![i].People!" class="text-danger"></span>

                        &nbsp;
                        <label asp-for="budgets![i].People!" class="control-label"></label>
                        &nbsp;x&nbsp;
                        <input asp-for="budgets![i].Days!" style="width: 15%;" class="form-control days"
                            onchange="setTotal('@Model.budgets![i].LabourCode', @Model.budgets![i].Rate, this.parentNode.querySelector('.people').value, this.value, @Model.budgets![i].UnallocatedDays, @Model.budgets![i].UnallocatedPeople)" />
                        <span asp-validation-for="budgets![i].Days!" class="text-danger"></span>

                        &nbsp;
                        <label asp-for="budgets![i].Days!" class="control-label"></label>
                        &nbsp;
                        x $@Model.budgets![i]!.Rate/day = <span id="@Model.budgets![i].LabourCode"> $0</span>
                        &nbsp;&nbsp;
                    </div>
                </div>
            }
            </br>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
</br>
<div>
    <a class="btn btn-secondary" asp-action="Index">Back to List</a>
</div>

<script>
    function setTotal(labourCode, rate, people, days, remain) {
        var element = document.querySelector("#" + labourCode);
        element.innerHTML = " $" + (people * days * rate).toFixed(2);
    }
    function filterDropdown(event) {
        const input = event.target;
        const dropdown = input.nextElementSibling;
        const filter = input.value.toUpperCase();
        const items = dropdown.getElementsByTagName("li");

        for (let i = 0; i < items.length; i++) {
            const item = items[i];
            const text = item.textContent || item.innerText;
            const match = text.toUpperCase().indexOf(filter) > -1;
            item.style.display = match ? "" : "none";
        }
    }
    document.querySelector('#employeeSearchBox').addEventListener('focus', function () {
        if (!document.querySelector('#employeeMenu').classList.contains('show')) {
            var event = new Event('click');
            this.dispatchEvent(event);
        }
    });
</script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
