@model IEnumerable<TimesheetApp.Models.TimesheetModels.Project>

@{
    if (User.Identity!.IsAuthenticated && (User.IsInRole("HR") || User.IsInRole("Admin")))
    {
        ViewData["Title"] = "All Projects";
    }
    else
    {
        ViewData["Title"] = "My Projects";
    }
}
<div class="modal" tabindex="-1" role="dialog" id="confirmClose" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm</h5>
            </div>
            <div class="modal-body" id="timesheetError">
                Are you sure you want to close this project? No more work will be able to be done on it.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmButton"
                    data-bs-dismiss="modal">Confirm</button>
            </div>
        </div>
    </div>
</div>

<head>
    <title>@ViewData["Title"]</title>
</head>
<h1>@ViewData["Title"]</h1>

<table class="table table-bordered table-responsive table-striped ">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProjectId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectTitle)
            </th>
            <th>
                Project Manager Name
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalBudget)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ActualCost)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectTitle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectManager!.FirstName) @item.ProjectManager!.LastName
                </td>
                <td>
                    $@Html.DisplayFor(modelItem => item.TotalBudget)
                </td>
                <td>
                    $@Html.DisplayFor(modelItem => item.ActualCost)
                </td>
                <td>
                    <a class="btn btn-primary rounded" asp-action="Edit" asp-route-id="@item.ProjectId"
                        role="button">Manage</a>
                    <a class="btn btn-primary rounded" asp-action="Report" asp-route-id="@item.ProjectId" role="button">
                        Last Month Report
                    </a>
                    @if (item.IsClosed == false)
                    {
                        <button class="btn btn-danger rounded" id='@("WP" + item.ProjectId)' data-bs-toggle="modal"
                            data-bs-target="#confirmClose" onclick="closeProject(@item.ProjectId)">Close</button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
@if (User.Identity!.IsAuthenticated && (User.IsInRole("HR") || User.IsInRole("Admin")))
{
    <p>
        <a class="btn btn-primary rounded" asp-action="Create">New Project</a>
    </p>
}

<script>
    var id;
    function closeProject(idToClose) {
        id = idToClose;
        document.querySelector("#confirmButton").addEventListener("click", () => {
            fetch("/Project/CloseProject", {
                method: "POST",
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(id),
            })
                .then(async (response) => {
                    if (response.status == 200) {
                        document.querySelector("#WP" + idToClose).style.display = "none";
                    }
                });
        });
    }
</script>