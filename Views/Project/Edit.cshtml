@model List<TimesheetApp.Models.TimesheetModels.WorkPackage>
    @{
    ViewData["Title"] = "Manage Project";
    Boolean isAssign = true;
    }

    <head>
        <title>@ViewData["Title"]</title>
    </head>
    <h1>@ViewData["Title"]</h1>

    <div id="WorkPackages" class="accordian"></div>

    <div class="modal" tabindex="-1" role="dialog" id="splitModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create Subpackage</h5>
                </div>
                <div class="modal-body">
                    <p id="childWorkPackages">
                    </p>
                    <input type="text" placeholder="Work Package Name..." id="newWorkPackageName">
                    <button type="button" class="btn btn-primary" onclick="splitPackage()">Create</button>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"
                        onClick="window.location.reload();">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" tabindex="-1" role="dialog" id="employeeModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                @if (isAssign) {
                    <div class="modal-header">
                    <h5 class="modal-title">Assign Employee</h5>
                </div>
                <div class="modal-body">
                    <div id="availableEmployees">
                        <h3>Available employees</h3>
                    </div>
                    @* <input type="text" placeholder="Work Package Name..." id="newWorkPackageName"> *@
                    <button type="button" class="btn btn-primary" onclick="assignEmployeeToWp()">Assign</button>
                </div>
                } else {
                        <div class="modal-header">
                    <h5 class="modal-title">Remove Employee</h5>
                </div>
                <div class="modal-body">
                    <div id="availableEmployees">
                        <h3>Available employees</h3>
                    </div>
                    @* <input type="text" placeholder="Work Package Name..." id="newWorkPackageName"> *@
                    <button type="button" class="btn btn-primary" onclick="assignEmployeeToWp()">Assign</button>
                </div>
                }
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"
                        onClick="window.location.reload();">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let currentWorkPackage = "";
        let bottomLevelWorkPackage = "";
        let div;
        let name;
        let re;
        let ec;
        let closed;
        let splitButton;
        let employeeButton;
        let parent;
        let item;
        let headerDiv;
        let header;
        let collapse;
        let ul;
        @foreach(var wp in Model) {
            <text>
            item = document.createElement("div");
            item.className = "accordion-item";

            headerDiv = document.createElement("h2");
            headerDiv.className = "accordion-header";
            headerDiv.id = "dropdownID" + "@wp.WorkPackageId";

            header = document.createElement("button");
            header.className = "accordion-button";
            header.type = "button";
            header.setAttribute("data-bs-toggle", "collapse");
            header.setAttribute("data-bs-target", "#" + "@wp.WorkPackageId" + "Panel");
            header.setAttribute("aria-expanded", false);
            header.setAttribute("aria-controls", "@wp.WorkPackageId" + "Panel");
            header.innerHTML = "@wp.WorkPackageId";

            headerDiv.appendChild(header);
            item.appendChild(headerDiv);

            collapse = document.createElement("div");
            collapse.id = "@wp.WorkPackageId" + "Panel";
            collapse.className = "accordion-collapse collapse show";
            collapse.setAttribute("aria-labelledby", "dropdownID" + "@wp.WorkPackageId");

            div = document.createElement("div");
            div.className = "accordion-body";
            div.id = "@wp.WorkPackageId";
            name = document.createElement("span");
            name.innerHTML = "Work Package Name: @wp.WorkPackageId";
            name.className = "label";
            div.appendChild(name); 
            </text>
            @if(wp.ResponsibleUser != null) {
                    <text> 
                        re = document.createElement("span");
                        re.className = "label";
                        re.innerHTML =
                            "Responsible Engineer: @wp.ResponsibleUser.FirstName @wp.ResponsibleUser.LastName;
                        div.appendChild(re); 
                    </text>
                } 
            <text>
            @* this button should be disabled if 
            there's any employee to the work package *@
            closed = document.createElement("span");
            closed.className = "label";
            closed.innerHTML = "Closed: @wp.IsClosed";
            div.appendChild(closed);

            splitButton = document.createElement("button");
            splitButton.value = "@wp.WorkPackageId";
            splitButton.name = "name";
            splitButton.className = "label";
            splitButton.addEventListener('click', async function callSplit(info) {
                currentWorkPackage = info.srcElement.value;
                await fetch("/Project/GetDirectChildren", {
                        method: "POST",
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            WorkPackageId: info.srcElement.value
                        }),
                    })
                    .then((response) => {
                        return response.json();
                    })
                    .then((response) => {
                        $("#splitModal").modal("show");
                        response.forEach(c => {
                            var a = document.createElement("p");
                            a.innerHTML = c.workPackageId;
                            document.querySelector("#childWorkPackages").appendChild(a);
                        });
                        if (response.length == 0) {
                            var a = document.createElement("p");
                            a.innerHTML = "Currently a bottom level package.";
                            document.querySelector("#childWorkPackages").appendChild(a);
                        }
                    });

            }, false);
            splitButton.type = "button";
            splitButton.innerHTML = "Create Subpackage";
            div.appendChild(splitButton);

            </text>
            @if (wp.IsBottomLevel) {
                <text>
                    @* get a list of employees *@
                    employeeButton = document.createElement("button");
                    employeeButton.value = "@wp.WorkPackageId";
                    employeeButton.name = "name";
                    employeeButton.className = "label";
                    employeeButton.addEventListener('click', async function getAvailableEmployees(info) {
                currentWorkPackage = info.srcElement.value;
                const avaialbleEmpEle = document.querySelector("#availableEmployees");
                await fetch("/Project/GetAvailableEmployees", {
                        method: "POST",
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            workPackageId: employeeButton.value
                            }),
                    })
                    .then((response) => {
                        return response.json();
                    })
                    .then((response) => {
                        $("#employeeModal").modal("show");
                        response.forEach((c,index) => {
                            var a = document.createElement("div");
                            a.classList.add(`emp_${index}`);
                            a.classList.add(`emp-name`);
                            a.innerHTML = `
                                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault${index}">
                                <label class="form-check-label" for="flexCheckDefault${index}">${c.firstName} ${c.lastName}</label>
                                <span style="display:none;" >${c.id}</span>
                                `;
                            avaialbleEmpEle.appendChild(a);
                        });
                        if (response.length == 0) {
                            var a = document.createElement("p");
                            a.innerHTML = "No avaialble employees";
                            avaialbleEmpEle.appendChild(a);
                        }
                    });

            }, false);
            employeeButton.type = "button";
            employeeButton.innerHTML = "Assign Employee";
            div.appendChild(employeeButton);
            ul = document.createElement("ul");
            fetch("/Project/GetAssignedEmployees", {
            method: "POST",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                WorkPackageId: employeeButton.value
                }),
            })
            .then((response) => {
                console.log(response)
                return response.json();
            })
            .then(res=>{
                ul.innerHTML = "<h3>Employees Assigned to this wp</h3>"
                if (res.length !== 0) {
                        // if any emp assigned to btmLvlwpkg, hide the split workpkg btn 
                        $(`#${employeeButton.value} button`).first().hide();
                        
                    res.forEach(e=> {
                    let element = document.createElement("li");
                    element.innerHTML = e.firstName +" " + e.lastName;
                    ul.appendChild(element);
                });
                } else {
                    ul.innerHTML += "<p>No one is asssigned</p>"
                }
                div.appendChild(ul);
            });
                </text>
            }
            @if (wp.ParentWorkPackageId != null && wp.ParentWorkPackageProjectId != null) {
                <text>
                collapse.appendChild(div);
                item.appendChild(collapse);
                parent = document.querySelector("#@wp.ParentWorkPackageId");
                parent.appendChild(item);
                </text>
            } else {
                <text>
                collapse.appendChild(div);
                item.appendChild(collapse);
                parent = document.querySelector("#WorkPackages");
                parent.appendChild(item);
                </text>
            }
        }

        async function splitPackage() {
            await fetch("/Project/Split", {
                method: "POST",
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    ParentWorkPackageId: currentWorkPackage,
                    WorkPackageId: document.querySelector("#newWorkPackageName").value
                }),
            }).then(c => {
                return c.json();
            }).then(c => {
                let element = document.createElement("p");
                element.innerHTML = c;
                document.querySelector("#childWorkPackages").appendChild(element);
            });
        }

        async function assignEmployeeToWp() {
            // creates an array of employees to add to this wp
            const empList = document.querySelectorAll(".emp-name");
            let employeesToBeAdded = Array.from(empList).map(e => {
                if (e.children[0].checked == true) {
                    return { WorkPackageProjectId: "@Model[0].ProjectId", WorkPackageId : employeeButton.value ,UserId : e.children[2].innerHTML};
                }
                
            });
            await fetch("/Project/AssignEmployees", {
                method: "POST",
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(employeesToBeAdded),
            }).then(res => {
                return res.json();
            }).then(res => {
                if (res.length !== 0) {
                    console.log(`${res.length} employee(s) added`);
@* 
                    attempting to add a notification Pop-up
                    const toast = document.createElement("div");
                    toast.innerHTML = `
                    <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="toast-header">
                            <img src="..." class="rounded mr-2" alt="...">
                            <strong class="mr-auto">Bootstrap</strong>
                            <small class="text-muted">just now</small>
                            <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="toast-body">
                            See? Just like this.
                        </div>
                        </div>`;
                    document.querySelector("#WorkPackages").appendChild(toast); *@
                } else {
                    console.log("no one added")
                }
            });

        }

        async function assignResponsibleEngineerToWp() {
            // creates an array of employees to add to this wp
            const empList = document.querySelectorAll(".emp-name");
            let employeesToBeAdded = Array.from(empList).map(e => {
                if (e.children[0].checked == true) {
                    return { WorkPackageProjectId: "@Model[0].ProjectId", WorkPackageId : employeeButton.value ,UserId : e.children[2].innerHTML};
                }
                
            });
            await fetch("/Project/AssignEmployees", {
                method: "POST",
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(employeesToBeAdded),
            }).then(res => {
                return res.json();
            }).then(res => {
                if (res.length !== 0) {
                    console.log(`${res.length} employee(s) added`);
@* 
                    attempting to add a notification Pop-up
                    const toast = document.createElement("div");
                    toast.innerHTML = `
                    <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="toast-header">
                            <img src="..." class="rounded mr-2" alt="...">
                            <strong class="mr-auto">Bootstrap</strong>
                            <small class="text-muted">just now</small>
                            <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="toast-body">
                            See? Just like this.
                        </div>
                        </div>`;
                    document.querySelector("#WorkPackages").appendChild(toast); *@
                } else {
                    console.log("no one added")
                }
            });

        }
    </script>