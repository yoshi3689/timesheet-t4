@model TimesheetApp.Models.LowestWorkPackageBAndEViewModel

@{
  ViewData["Title"] = "Edit";
}

<br>
@if (Model.estimates != null || Model.budgets![0].isREBudget == false)
{
  <form id="reBudgetEstimateForm" asp-action="CreateBudgetsAndEstimates">

    @if (Model.budgets != null && Model.budgets[0].isREBudget == false)
    {
      <div asp-validation-summary="ModelOnly" class="text-danger"></div>
      <h1>Work Package Budget</h1>
      <h3>Person Days per Labour Grade</h3>
      @for (int i = 0; i < Model.budgets!.Count; i++)
      {
        <div class="form-group">
          <input type="hidden" asp-for="budgets![i].LabourCode" value="@Model.budgets![i].LabourCode" />
          <input type="hidden" asp-for="budgets![i].WPProjectId" value="@Model.budgets![i].WPProjectId" />
          <span>@Model.budgets[i].LabourCode</span>
          <div class="d-flex align-items-center"
            style="display:flex; flex-direction: row; overflow: hidden; white-space: nowrap;">
            <input asp-for="budgets![i].People!" style="width: 10%;" class="form-control people"
              onchange="setTotal('@Model.budgets![i].LabourCode', @Model.budgets![i].Rate, this.value, this.parentNode.querySelector('.days').value, @Model.budgets![i].UnallocatedDays, @Model.budgets![i].UnallocatedPeople)" />
            <span asp-validation-for="budgets![i].People!" class="text-danger"></span>

            &nbsp;
            <label asp-for="budgets![i].People!" class="control-label"></label>
            &nbsp;x&nbsp;
            <input asp-for="budgets![i].Days!" style="width: 10%;" class="form-control days"
              onchange="setTotal('@Model.budgets![i].LabourCode', @Model.budgets![i].Rate, this.parentNode.querySelector('.people').value, this.value, @Model.budgets![i].UnallocatedDays, @Model.budgets![i].UnallocatedPeople)" />
            <span asp-validation-for="budgets![i].Days!" class="text-danger"></span>

            &nbsp;
            <label asp-for="budgets![i].Days!" class="control-label"></label>
            &nbsp;
            x $@Model.budgets![i]!.Rate/day = <span id="@Model.budgets![i].LabourCode"> $0</span>
          </div>
          <span asp-validation-for="budgets![i].BudgetAmount" class="text-danger"></span>
        </div>
        <br />
      }
      <br>
    }

    <h1>Weekly Estimates</h1>
    <h3>Person Days per Labour Grade</h3>
    @if (Model.estimates != null)
    {
      @for (int i = 0; i < Model.estimates!.Count; i++)
      {
        <div class="form-group">
          <input type="hidden" asp-for="estimates![i].LabourCode" value="@Model.estimates![i].LabourCode" />
          <input type="hidden" asp-for="estimates![i].WPProjectId" value="@Model.estimates![i].WPProjectId" />
          <span>@Model.estimates[i].LabourCode</span>
          <div class="d-flex align-items-center"
            style="display:flex; flex-direction: row; overflow: hidden; white-space: nowrap;">
            <input asp-for="estimates![i].EstimatedCost!" style="width: 10%;" class="form-control people" />
            &nbsp;
            <label asp-for="estimates![i].EstimatedCost!" class="control-label"></label>
            &nbsp;&nbsp;
          </div>
          <span asp-validation-for="estimates![i].EstimatedCost" class="text-danger"></span>
        </div>
        <br />
      }
    }
    else
    {
      <h1>Estimates are already set for this week!</h1>
    }
    <div class="modal-footer">
      <a class="btn btn-secondary" asp-action="Index">Back to List</a>
      <input type="submit" value="Create" class="btn btn-primary" />
    </div>
  </form>
}
else
{
  <h3>Budget and Estimates are already set.</h3>
  <a class="btn btn-secondary" asp-action="Index">Back to List</a>

}


@section Scripts {
  @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
  }
}

<script>
  function setTotal(labourCode, rate, people, days, remain) {
    var element = document.querySelector("#" + labourCode);
    element.innerHTML = " $" + (people * days * rate).toFixed(2);
  }
</script>
