@model IEnumerable<TimesheetApp.Models.ApplicationUser>

@{
    ViewData["Title"] = "Index";
    int totalPages = (int)ViewData["TotalPages"];
    int currentPage = (int)ViewData["CurrentPage"];
    int pageSize = (int)ViewData["PageSize"];
}

<h1>Employees</h1>

<div class="row">
    <div class="col my-2">
        Search: <input class="m-2" type="text" id="searchBox" />
    </div>

    <div class="col text-end">
        <a class="btn btn-primary rounded" asp-area="Identity" asp-page="/Account/Register">Add Employee</a>
    </div>
</div>

<br />

<div class="pagination-container">
    <nav aria-label="Users Pagination">
        <ul class="pagination">
            @if (totalPages > 1)
            {
                if (currentPage != 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = 1 })" aria-label="First">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">First</span>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1 })" aria-label="Previous">
                            <span aria-hidden="true">&lsaquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>
                }

                @for (int i = 1; i <= totalPages; i++)
                {
                    if (i == 1 || i == totalPages || (i >= currentPage - 2 && i <= currentPage + 2))
                    {
                        if (i == currentPage)
                        {
                            <li class="page-item active"><a class="page-link">@i</a></li>
                        }
                        else
                        {
                            <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a></li>
                        }
                    }
                    else if ((i == currentPage - 3 && i > 1) || (i == currentPage + 3 && i < totalPages))
                    {
                        <li class="page-item disabled"><span class="page-link">...</span></li>
                    }
                }

                if (currentPage != totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1 })" aria-label="Next">
                            <span aria-hidden="true">&rsaquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = totalPages })" aria-label="Last">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Last</span>
                        </a>
                    </li>
                }

                <li class="page-item">
                    <form action="@Url.Action("Index")" method="get" class="input-form">
                        <input type="number" name="page" class="form-control" placeholder="Enter page number" min="1"
                            max="@totalPages" required>
                        <span class="input-group-btn">
                            <button class="btn btn-primary" type="submit">Go</button>
                        </span>
                    </form>
                </li>
            }

        </ul>

    </nav>


</div>


<style>
    .page-item {
        margin-right: 5px;
        border-radius: 0px !important;
    }

    .page-link {
        color: #000;
        background-color: #fff;
        border: 1px solid #ddd;
    }

    .page-link:hover {
        color: #000;
        background-color: #e9ecef;
        border-color: #ddd;
    }

    .page-link:focus {
        box-shadow: none;
    }

    .active .page-link {
        color: #fff;
        background-color: #007bff;
        border-color: #007bff;
    }

    .input-form {
        display: flex;
    }
</style>

<table id="myTable" class="table table-bordered table-responsive table-striped ">
    <thead>
        <tr>
            <th class="text-center text-nowrap">
                Name
            </th>
            <th class="text-center text-nowrap">
                @Html.DisplayNameFor(model => model.EmployeeNumber)
            </th>
            <th class="text-center text-nowrap">
                @Html.DisplayNameFor(model => model.SickDays)
            </th>
            <th class="text-center text-nowrap">
                @Html.DisplayNameFor(model => model.FlexTime)
            </th>
            <th class="text-center text-nowrap">
                @Html.DisplayNameFor(model => model.JobTitle)
            </th>
            <th class="text-center text-nowrap">
                @Html.DisplayNameFor(model => model.Salary)
            </th>
            <th class="text-center text-nowrap">
                @Html.DisplayNameFor(model => model.LabourGradeCode)
            </th>
            <th class="text-center text-nowrap">
                @Html.DisplayNameFor(model => model.Supervisor)
            </th>
            <th class="text-center text-nowrap">
                @Html.DisplayNameFor(model => model.TimesheetApprover)
            </th>
            <th class="text-center text-nowrap">
                @Html.DisplayNameFor(model => model.Email)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmployeeNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SickDays)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FlexTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.JobTitle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Salary)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LabourGradeCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Supervisor!.FirstName) @Html.DisplayFor(modelItem =>
                item.Supervisor!.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TimesheetApprover!.FirstName) @Html.DisplayFor(modelItem =>
                item.TimesheetApprover!.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    <a class="btn btn-warning rounded w-100 mb-2 " asp-action="Edit" asp-route-id="@item.Id"
                        role="button">Edit</a>
                    <a class="btn btn-primary rounded w-100" asp-action="Details" asp-route-id="@item.Id"
                        role="button">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section scripts
    {
    <script>
        function performSearch() {

            // get search box value
            const searchBoxValue = searchBox.value.toLowerCase();
            // loop through table rows
            for (let i = 0; i < trs.length; i++) {

                // get table row
                const tr = trs[i];

                // get table row text
                const trText = tr.innerText.toLowerCase();

                // check if table row text contains search box value
                if (trText.indexOf(searchBoxValue) > -1) {
                    tr.style.display = "";
                } else {
                    tr.style.display = "none";
                }
            }
        }

        // declare elements
        const searchBox = document.getElementById('searchBox');
        const table = document.getElementById("myTable");
        const trs = table.tBodies[0].getElementsByTagName("tr");

        // add event listener to search box
        searchBox.addEventListener('keyup', performSearch);
    </script>
}